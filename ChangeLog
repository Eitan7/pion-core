Version 1.0.6 (2008-11-21)
==========================

* Faster vocabulary pane loading
* Update to Dojo 1.2.1 for UI (280)
* Context menus now available on Firefox/MacOSX
* Robot field in clickstream vocabulary (345)
* SQLite engine refactored; configurability, read/write (271)
* Database class reads SQL configuration from dbengines.xml (271)
* Works with Safari 3.1 and earlier with debugging mode disabled (352)
* Debugging mode is now off by default (352)
* Now correctly destroying dialogs
* DateTime now handled correctly in TransformReactor and FilterReactor
* Reactor start/stop status persisted across shutdown (110)
* Moving (visually) reactors no longer restarts reactors (342)
* autoconf/autogen fixed for RHEL/CentOS < 5.0 (347)


Version 1.0.4 (2008-10-17)
==========================

* LogCodec supports configurable separators, terminators, c-style escapes
* Database class has the stubs for supporting read values for a SELECT
statement
* Event class has copyValues(), set(), and write() members
* A new Protocol configuration page
* Optional fields for LogCodec
* Tweaks to make IE work better
* LogCodec UI changes to accomodate new functionality
* HTTPProtocol has new content extraction
* XML for codecs/dbs/reactors/connections can now be pasted in
* HTTP protocol now stores request packets timestamp (#300)
* Fixed make_binary.pl for Mac (#325)
* PionLockedQueue::pop() fixed (#304)


Version 1.0.2 (2008-09-26)
==========================

* If LogInputReactor::readFromLog() catches an exception, it now adds the log
  file to the list of consumed files, so it doesn't keep trying to read it.
* Replaced r667 with new patch that works for any field delimiter
* Cache files for LogInputReactor are now written to the config directory
  instead of the log file directory.
* Reverting changes made in revision 656 (in preparation for Dojo 1.2),
  because they don't work in IE.
* Added support in LogInputReactor for optional 'tail -f' behavior when
  reading log files.
* Added --version command line parameter to pion server executable
* Added "EventsQueued" statistic to DatabaseOutputReactor::query()
* Added 'tail -f' option in the LogInputReactor UI and did some refactoring.
* Added Reactor context menu item to show the Reactor's configuration as raw
  XML.  (The XML can be copied, but not changed.)
* Fixed ReactionScheduler so that if io_service users throw it should no
  longer crash Pion
* Updated query stats returned by LogInputReactor to include ConsumedLog
  and CurrentLog elements
* Updated LogInputReactor to stop itself if it unable to write cache files
  to the input directory
* Shift-double-clicking on a Reactor now gives you a dialog with the results
  of /query/reactors/<uuid>.
* Updated Reactor::query() so that default returns reactor statistics info
  Misc refactoring of reactor stats code
* Added a Komodo project file for Pion UI code.
* QueryService (Reactor/ReactionEngine)
* Added QueueTimeout field in DatabaseOutputReactorDialog.
* Added QueueTimeout parameter to DatabaseOutputReactor (default is 10 seconds)
* Updated ServiceManager to send ascii text 500 server error responses
* Added patch for LogInputReactor crashing when removed


Version 0.6.0 (2008-08-29)
==========================

* LogInputReactor keeps track of which logs it has consumed & how much (89)
* LogInputReactor supports reading gzip and bzip2 log files natively (93)
* Added "About" user interface page with license & third party libs (264)
* Added MaxThreads and MultiThreadBranches ReactionEngine parameters (251)
* Misc Vocabulary and Codec updates for managing clickstream traffic (202)
* Fixed user interface for browser languages other than English (255)
* Fixed bug with is-defined and is-not-defined Comparison types (275)
* Fixed failures within the checkDatabaseOutputReactor unit test (215)
* Fixed bug with the --disable-logging configure option breaking build (254)
* Updated HTTPParser::parseCookieHeader() to be usable for char[] as well
* Only HTML documentation is now build with Doxygen when using "make docs"
* The boost.iostreams, gzip (zlib) and bzip2 libraries are now required


Version 0.5.8 (2008-07-18)
==========================

* Added new XML and JSON Codecs for event serialization (74, 104)
* Added a new Transform Reactor for data cleansing, normalizing, etc. (105)
* Added a new "Protocol" plugin type, for sniffing network traffic (182)
* Fixed bug in regex comparisons that caused Pion to crash (212)
* Regex comparisons no longer require the entire value to match (214)
* Updated LogInputReactor's JustOne feature so that it handles restarts (216)
* UI dialog boxes now provide scrollbars if they cannot fit on Desktop (219)
* Fixed crash caused when Reactor connections were removed at runtime (238)
* Updated UI so that it better auto-detects which plugins are available (244)
* Pion now listens to port 8888, and SSL is disabled (126, 218)
* Added support to the UI for the Safari web browser (165)
* Added --with-boost-extension option to Unix configure script (217)
* Misc updates to get things building on gcc 4.2 and gcc 4.3 (241)
* See also the Pion Network Library ChangeLog for 0.5.8


Version 0.5.6 (2008-05-02)
==========================

* Added support for user authentication and user management in the UI
* Added support for adding, changing and deleting Vocabularies in the UI
* Updated UI to support the Internet Explorer 7; Safari is still broken
* Improved performance of Event memory operations & ReactionEngine scheduling
* Made SQLite external: use --with-sqlite to enable support for Unix builds
* Fixed compatibility problems with RHEL5 that was causing unit tests to fail
* Added "JustOne" parameter to LogInputReactor for performance/load testing
* Vocabulary locks in the UI should now correctly prevent any modifications
* Fixed some bugs with the display of Comparisons in FilterReactors dialogs
* Fixed a bug that displayed non-existing connections to deleted Reactors
* Fixed problems with using multiple Reactor workspaces in the UI
* Deleting a Reactor workspace in the UI now deletes all Reactors it contains
* Updated JavaScript to use Dojo 1.1.1 and optimized UI code for size/speed
* Added a "stocks" vocabulary and code, to server as another metadata example
* Added "make docs" Unix build option that uses Doxygen to build all the docs
* Unix build scripts now support dynamic versions of the Boost.UnitTest libs
* Boost 1.35.0 or later is now REQUIRED (it includes ASIO); see README.boost


Version 0.5.4 (2008-03-07)
==========================

* First functional alpha preview release
