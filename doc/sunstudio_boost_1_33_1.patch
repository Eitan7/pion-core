diff -Naur -X flt boost_1_33_1.orig/boost/config/compiler/sunpro_cc.hpp boost_1_33_1/boost/config/compiler/sunpro_cc.hpp
--- boost_1_33_1.orig/boost/config/compiler/sunpro_cc.hpp	2005-03-22 02:55:03.000000000 -0800
+++ boost_1_33_1/boost/config/compiler/sunpro_cc.hpp	2006-01-27 04:52:09.500378000 -0800
@@ -77,7 +77,7 @@
 #endif
 //
 // last known and checked version is 0x570:
-#if (__SUNPRO_CC > 0x570)
+#if (__SUNPRO_CC > 0x590)
 #  if defined(BOOST_ASSERT_CONFIG)
 #     error "Unknown compiler version - please run the configure tests and report the results"
 #  endif
diff -Naur -X flt boost_1_33_1.orig/boost/iostreams/char_traits.hpp boost_1_33_1/boost/iostreams/char_traits.hpp
--- boost_1_33_1.orig/boost/iostreams/char_traits.hpp	2005-09-10 11:49:36.000000000 -0700
+++ boost_1_33_1/boost/iostreams/char_traits.hpp	2006-01-30 03:18:27.895932000 -0800
@@ -30,7 +30,8 @@
 // Dinkumware that comes with QNX Momentics 6.3.0, 4.0.2, incorrectly defines the
 // EOF and WEOF macros to not std:: qualify the wint_t type.
 // Fix by placing the def in this scope.
-#if defined(__QNX__) && defined(BOOST_DINKUMWARE_STDLIB)
+#if (defined(__QNX__) && defined(BOOST_DINKUMWARE_STDLIB)) \
+    || defined(__SUNPRO_CC)
 using ::std::wint_t;
 #endif
 
diff -Naur -X flt boost_1_33_1.orig/boost/mpl/aux_/nested_type_wknd.hpp boost_1_33_1/boost/mpl/aux_/nested_type_wknd.hpp
--- boost_1_33_1.orig/boost/mpl/aux_/nested_type_wknd.hpp	2004-09-28 06:56:59.000000000 -0700
+++ boost_1_33_1/boost/mpl/aux_/nested_type_wknd.hpp	2006-01-27 04:53:33.244696000 -0800
@@ -19,7 +19,7 @@
 
 #if BOOST_WORKAROUND(BOOST_MPL_CFG_GCC, BOOST_TESTED_AT(0x0302)) \
     || BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x561)) \
-    || BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530)) \
+    || BOOST_WORKAROUND(__SUNPRO_CC, <= 0x560) \
     || BOOST_WORKAROUND(__DMC__, BOOST_TESTED_AT(0x840))
 
 namespace boost { namespace mpl { namespace aux {
diff -Naur -X flt boost_1_33_1.orig/boost/numeric/ublas/io.hpp boost_1_33_1/boost/numeric/ublas/io.hpp
--- boost_1_33_1.orig/boost/numeric/ublas/io.hpp	2005-07-01 13:08:52.000000000 -0700
+++ boost_1_33_1/boost/numeric/ublas/io.hpp	2006-01-27 04:54:26.438791000 -0800
@@ -19,6 +19,7 @@
 
 // Only forward definition required to define stream operations
 #include <iosfwd>
+#include <sstream>
 #include <boost/numeric/ublas/matrix_expression.hpp>
 
 
diff -Naur -X flt boost_1_33_1.orig/boost/regex/v4/fileiter.hpp boost_1_33_1/boost/regex/v4/fileiter.hpp
--- boost_1_33_1.orig/boost/regex/v4/fileiter.hpp	2005-08-19 09:10:11.000000000 -0700
+++ boost_1_33_1/boost/regex/v4/fileiter.hpp	2006-01-27 15:08:42.221478000 -0800
@@ -21,6 +21,8 @@
 #ifndef BOOST_RE_FILEITER_HPP_INCLUDED
 #define BOOST_RE_FILEITER_HPP_INCLUDED
 
+#include <boost/detail/workaround.hpp>
+
 #ifndef BOOST_REGEX_CONFIG_HPP
 #include <boost/regex/config.hpp>
 #endif
@@ -69,7 +71,7 @@
 #include <cassert>
 #include <dirent.h>
 
-#if defined(__SUNPRO_CC)
+#if BOOST_WORKAROUND(__SUNPRO_CC, <= 0x560)
 using std::list;
 #endif
 
diff -Naur -X flt boost_1_33_1.orig/boost/test/framework.hpp boost_1_33_1/boost/test/framework.hpp
--- boost_1_33_1.orig/boost/test/framework.hpp	2005-03-23 20:02:32.000000000 -0800
+++ boost_1_33_1/boost/test/framework.hpp	2006-01-27 06:34:04.006489000 -0800
@@ -47,7 +47,7 @@
 // constant access methods
 test_suite const&   master_test_suite();
 test_case const&    current_test_case();
-#if BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530) )
+#if BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
 template<typename UnitType>
 UnitType const&     get( test_unit_id id )
 {
diff -Naur -X flt boost_1_33_1.orig/boost/test/impl/test_tools.ipp boost_1_33_1/boost/test/impl/test_tools.ipp
--- boost_1_33_1.orig/boost/test/impl/test_tools.ipp	2005-06-22 15:03:05.000000000 -0700
+++ boost_1_33_1/boost/test/impl/test_tools.ipp	2006-01-27 06:29:37.492984000 -0800
@@ -580,7 +580,7 @@
 #ifdef BOOST_NO_STRINGSTREAM
     m_pimpl->m_synced_string.assign( str(), pcount() );
     freeze( false );
-#elif BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530) )
+#elif BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
     m_pimpl->m_synced_string.assign( str().c_str(), tellp() );
 #else
     m_pimpl->m_synced_string = str();
diff -Naur -X flt boost_1_33_1.orig/boost/test/impl/unit_test_suite.ipp boost_1_33_1/boost/test/impl/unit_test_suite.ipp
--- boost_1_33_1.orig/boost/test/impl/unit_test_suite.ipp	2005-04-17 21:55:36.000000000 -0700
+++ boost_1_33_1/boost/test/impl/unit_test_suite.ipp	2006-01-27 06:30:18.329836000 -0800
@@ -70,7 +70,7 @@
 bool
 test_unit::check_dependencies() const
 {
-#if BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530) )
+#if BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
     BOOST_TEST_FOREACH( test_unit_id, tu_id, const_cast<test_unit*>(this)->m_dependencies ) {
 #else
     BOOST_TEST_FOREACH( test_unit_id, tu_id, m_dependencies ) {
diff -Naur -X flt boost_1_33_1.orig/boost/test/utils/basic_cstring/basic_cstring.hpp boost_1_33_1/boost/test/utils/basic_cstring/basic_cstring.hpp
--- boost_1_33_1.orig/boost/test/utils/basic_cstring/basic_cstring.hpp	2005-07-13 14:49:46.000000000 -0700
+++ boost_1_33_1/boost/test/utils/basic_cstring/basic_cstring.hpp	2006-01-27 06:33:21.243963000 -0800
@@ -713,7 +713,7 @@
 
 template<typename CharT1, typename CharT2>
 inline void
-#if BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530) )
+#if BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
 assign_op( std::basic_string<CharT1>& target, basic_cstring<CharT2> const& src, int )
 #else
 assign_op( std::basic_string<CharT1>& target, basic_cstring<CharT2> src, int )
diff -Naur -X flt boost_1_33_1.orig/boost/test/utils/fixed_mapping.hpp boost_1_33_1/boost/test/utils/fixed_mapping.hpp
--- boost_1_33_1.orig/boost/test/utils/fixed_mapping.hpp	2005-06-16 07:33:42.000000000 -0700
+++ boost_1_33_1/boost/test/utils/fixed_mapping.hpp	2006-01-27 06:30:51.723770000 -0800
@@ -91,7 +91,7 @@
     // key -> value access
     value_ref_type  operator[]( key_param_type key ) const
     {
-#if BOOST_WORKAROUND(__SUNPRO_CC,BOOST_TESTED_AT(0x530))
+#if BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
         iterator it = std::lower_bound( m_map.begin(), m_map.end(), key, p1() );
 #else
         iterator it = boost::detail::lower_bound( m_map.begin(), m_map.end(), key, p1() );
diff -Naur -X flt boost_1_33_1.orig/boost/test/utils/foreach.hpp boost_1_33_1/boost/test/utils/foreach.hpp
--- boost_1_33_1.orig/boost/test/utils/foreach.hpp	2005-03-23 20:02:33.000000000 -0800
+++ boost_1_33_1/boost/test/utils/foreach.hpp	2006-01-27 06:32:58.295600000 -0800
@@ -28,7 +28,7 @@
 #include <boost/mpl/bool.hpp>
 #include <boost/test/detail/workaround.hpp>
 
-#if !BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530) )
+#if !BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
 #include <boost/type_traits/is_const.hpp>
 #endif
 
@@ -80,7 +80,7 @@
 // **************                   is_const                   ************** //
 // ************************************************************************** //
 
-#if BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530) )
+#if BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
 
 template<typename C>
 inline mpl::false_
@@ -128,7 +128,7 @@
 
 //____________________________________________________________________________//
 
-#if BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530) )
+#if BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
 
 template<typename C>
 inline static_any<BOOST_DEDUCED_TYPENAME C::iterator>
@@ -164,7 +164,7 @@
 
 //____________________________________________________________________________//
 
-#if BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x530) )
+#if BOOST_WORKAROUND(__SUNPRO_CC, <= 0x530)
 
 template<typename C>
 inline static_any<BOOST_DEDUCED_TYPENAME C::iterator>
diff -Naur -X flt boost_1_33_1.orig/boost/type_traits/is_base_and_derived.hpp boost_1_33_1/boost/type_traits/is_base_and_derived.hpp
--- boost_1_33_1.orig/boost/type_traits/is_base_and_derived.hpp	2005-04-21 08:58:33.000000000 -0700
+++ boost_1_33_1/boost/type_traits/is_base_and_derived.hpp	2006-01-27 05:02:34.932055000 -0800
@@ -24,7 +24,7 @@
 namespace detail {
 
 #if !BOOST_WORKAROUND(__BORLANDC__, <= 0x570) \
- && !BOOST_WORKAROUND(__SUNPRO_CC , BOOST_TESTED_AT(0x540)) \
+ && !BOOST_WORKAROUND(__SUNPRO_CC , <= 0x560) \
  && !BOOST_WORKAROUND(__EDG_VERSION__, <= 243) \
  && !BOOST_WORKAROUND(__DMC__, BOOST_TESTED_AT(0x840))
 
diff -Naur -X flt boost_1_33_1.orig/boost/wave/cpplexer/re2clex/cpp_re2c_lexer.hpp boost_1_33_1/boost/wave/cpplexer/re2clex/cpp_re2c_lexer.hpp
--- boost_1_33_1.orig/boost/wave/cpplexer/re2clex/cpp_re2c_lexer.hpp	2005-10-08 06:27:20.000000000 -0700
+++ boost_1_33_1/boost/wave/cpplexer/re2clex/cpp_re2c_lexer.hpp	2006-01-31 06:05:30.660217000 -0800
@@ -294,17 +294,17 @@
     
     lex_functor(IteratorT const &first, IteratorT const &last, 
             PositionT const &pos, boost::wave::language_support language)
-    :   lexer(first, last, pos, language)
+    :   lexerv(first, last, pos, language)
     {}
     virtual ~lex_functor() {}
     
 // get the next token from the input stream
-    token_type get() { return lexer.get(); }
+    token_type get() { return lexerv.get(); }
     void set_position(PositionT const &pos) 
-    { lexer.set_position(pos); }
+    { lexerv.set_position(pos); }
 
 private:
-    lexer<IteratorT, PositionT> lexer;
+    lexer<IteratorT, PositionT> lexerv;
 };
 
 ///////////////////////////////////////////////////////////////////////////////
diff -Naur -X flt boost_1_33_1.orig/libs/algorithm/minmax/test/minmax_element_test.cpp boost_1_33_1/libs/algorithm/minmax/test/minmax_element_test.cpp
--- boost_1_33_1.orig/libs/algorithm/minmax/test/minmax_element_test.cpp	2005-04-01 14:19:44.000000000 -0800
+++ boost_1_33_1/libs/algorithm/minmax/test/minmax_element_test.cpp	2006-01-27 05:05:37.247879000 -0800
@@ -18,6 +18,10 @@
 #include <boost/test/included/test_exec_monitor.hpp>
 #include <boost/iterator/reverse_iterator.hpp>
 
+#ifndef BOOST_NO_STDC_NAMESPACE
+using std:atoi;
+#endif
+
 class custom {
   int m_x;
   friend bool operator<(custom const& x, custom const& y);
diff -Naur -X flt boost_1_33_1.orig/libs/program_options/src/options_description.cpp boost_1_33_1/libs/program_options/src/options_description.cpp
--- boost_1_33_1.orig/libs/program_options/src/options_description.cpp	2005-07-13 09:32:40.000000000 -0700
+++ boost_1_33_1/libs/program_options/src/options_description.cpp	2006-01-30 03:21:25.066602000 -0800
@@ -384,7 +384,7 @@
                         {                 
                             // is last_space within the second half ot the 
                             // current line
-                            if (unsigned(distance(last_space, line_end)) < 
+                            if ((unsigned)(distance(last_space, line_end)) < 
                                 (line_length - indent) / 2)
                             {
                                 line_end = last_space;
diff -Naur -X flt boost_1_33_1.orig/libs/program_options/test/parsers_test.cpp boost_1_33_1/libs/program_options/test/parsers_test.cpp
--- boost_1_33_1.orig/libs/program_options/test/parsers_test.cpp	2005-11-10 00:46:56.000000000 -0800
+++ boost_1_33_1/libs/program_options/test/parsers_test.cpp	2006-01-27 05:07:41.326949000 -0800
@@ -179,7 +179,7 @@
 #if defined(_WIN32) && ! defined(__BORLANDC__)
     _putenv("PO_TEST_FOO=1");
 #else
-    putenv("PO_TEST_FOO=1");
+    std::putenv("PO_TEST_FOO=1");
 #endif
     parsed_options p = parse_environment(desc, "PO_TEST_");
 
diff -Naur -X flt boost_1_33_1.orig/libs/regex/test/concepts/concept_check.cpp boost_1_33_1/libs/regex/test/concepts/concept_check.cpp
--- boost_1_33_1.orig/libs/regex/test/concepts/concept_check.cpp	2005-01-21 09:26:11.000000000 -0800
+++ boost_1_33_1/libs/regex/test/concepts/concept_check.cpp	2006-01-27 06:37:36.194067000 -0800
@@ -86,7 +86,9 @@
          regex_traits_tester_type1
       >
    >();
-#if !defined(__MWERKS__) && !defined(__SUNPRO_CC) // MWCW tries to instantiate std::basic_string<boost::char_architype>, not sure whose bug this is....
+#if !defined(__MWERKS__) && !BOOST_WORKAROUND(__SUNPRO_CC, < 0x570) // MWCW tries to instantiate
+                                                                    // std::basic_string<boost::char_architype>,
+								    // not sure whose bug this is....
    typedef boost::basic_regex<boost::char_architype, boost::regex_traits_architype<boost::char_architype> > regex_traits_tester_type2;
    boost::function_requires<
       boost::BaseRegexConcept<
diff -Naur -X flt boost_1_33_1.orig/libs/test/doc/components/utf/getting_started/const_string.hpp boost_1_33_1/libs/test/doc/components/utf/getting_started/const_string.hpp
--- boost_1_33_1.orig/libs/test/doc/components/utf/getting_started/const_string.hpp	2005-07-11 00:12:03.000000000 -0700
+++ boost_1_33_1/libs/test/doc/components/utf/getting_started/const_string.hpp	2006-01-27 06:39:49.105953000 -0800
@@ -30,7 +30,7 @@
     // Subtypes
     typedef     char const*                                 iterator;
     typedef     char const*                                 const_iterator;
-#if defined(__SUNPRO_CC) && !defined(__SGI_STL_PORT)
+#if BOOST_WORKAROUND(__SUNPRO_CC, < 0x570) && !defined(__SGI_STL_PORT)
     typedef     std::reverse_iterator<iterator,std::random_access_iterator_tag, char, char const&> reverse_iterator;
 #else
     typedef     std::reverse_iterator<iterator,char, char const&> reverse_iterator;
diff -Naur -X flt boost_1_33_1.orig/libs/utility/call_traits_test.cpp boost_1_33_1/libs/utility/call_traits_test.cpp
--- boost_1_33_1.orig/libs/utility/call_traits_test.cpp	2005-05-24 07:53:49.000000000 -0700
+++ boost_1_33_1/libs/utility/call_traits_test.cpp	2006-01-27 05:15:30.698446000 -0800
@@ -249,14 +249,14 @@
    c4(i);
    call_traits_checker<const int&> c5;
    c5(i);
-#if !defined (BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION) && !defined(__MWERKS__) && !defined(__SUNPRO_CC)
+#if !defined (BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION) && !defined(__MWERKS__)
    call_traits_checker<int[2]> c6;
    c6(a);
 #endif
 #endif
 
    check_wrap(test_wrap_type(2), 2);
-#if !defined(BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION) && !defined(__SUNPRO_CC)
+#if !defined(BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION)
    check_wrap(test_wrap_type(a), a);
    check_make_pair(test::make_pair(a, a), a, a);
 #endif
@@ -439,7 +439,7 @@
 #if defined(BOOST_MSVC6_MEMBER_TEMPLATES)
 template struct call_traits_test<int&>;
 template struct call_traits_test<const int&>;
-#if !defined(BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION) && !defined(__SUNPRO_CC)
+#if !defined(BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION)
 template struct call_traits_test<int[2], true>;
 #endif
 #endif
@@ -451,8 +451,10 @@
 unsigned int expected_failures = 18;
 #elif(__SUNPRO_CC < 0x530)
 unsigned int expected_failures = 17;
-#else
+#elif(__SUNPRO_CC < 0x570)
 unsigned int expected_failures = 6;
+#else
+unsigned int expected_failures = 0;
 #endif
 #elif defined(__BORLANDC__)
 unsigned int expected_failures = 2;
diff -Naur -X flt boost_1_33_1.orig/tools/build/jam_src/build.sh boost_1_33_1/tools/build/jam_src/build.sh
--- boost_1_33_1.orig/tools/build/jam_src/build.sh	2005-10-26 14:41:14.000000000 -0700
+++ boost_1_33_1/tools/build/jam_src/build.sh	2006-01-27 05:19:32.905022000 -0800
@@ -177,8 +177,9 @@
     if test -r /opt/SUNWspro/bin/cc ; then
         BOOST_JAM_TOOLSET_ROOT=/opt/SUNWspro/
     fi
-    if test -r $BOOST_JAM_TOOLSET_ROOTbin/cc ; then
-        export PATH=$BOOST_JAM_TOOLSET_ROOTbin:$PATH
+    if test -r ${BOOST_JAM_TOOLSET_ROOT}bin/cc ; then
+	PATH=${BOOST_JAM_TOOLSET_ROOT}bin:${PATH}
+	export PATH
     fi
     BOOST_JAM_CC=cc
     ;;
diff -Naur -X flt boost_1_33_1.orig/tools/build/v1/sunpro-tools.jam boost_1_33_1/tools/build/v1/sunpro-tools.jam
--- boost_1_33_1.orig/tools/build/v1/sunpro-tools.jam	2004-12-01 02:15:21.000000000 -0800
+++ boost_1_33_1/tools/build/v1/sunpro-tools.jam	2006-01-30 03:35:59.816205000 -0800
@@ -61,6 +61,13 @@
 flags sunpro C++FLAGS <exception-handling>on : -features=except ;
 flags sunpro C++FLAGS <exception-handling>off : -features=no%except ;
 
+flags sunpro C++FLAGS : -library=stlport4 ;
+flags sunpro C++FLAGS : -features=tmplife -features=tmplrefstatic ;
+flags sunpro C++FLAGS : -erroff=wbadinitl,wbadasgl ;
+flags sunpro C++FLAGS : -Qoption ccfe -complextmplexp ;
+
+flags sunpro LINKFLAGS : -library=stlport4 ;
+
 flags sunpro DLLVERSION <dllversion> ;
 
 flags sunpro .CXX : $(SUNPRO_CXX) ;
@@ -83,8 +90,6 @@
 flags sunpro C++FLAGS <cxxflags> ;
 flags sunpro DEFINES <define> ;
 flags sunpro UNDEFS <undef> ;
-flags sunpro HDRS <include> ;
-flags sunpro SYSHDRS <sysinclude> ;
 flags sunpro LINKFLAGS <linkflags> ;
 flags sunpro LINKFLAGS <debug-symbols>off : -s ;
 flags sunpro ARFLAGS <arflags> ;
